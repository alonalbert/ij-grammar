{
  parserClass="com.github.alonalbert.ijgrammar.simple.SimpleParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Simple"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.alonalbert.ijgrammar.simple"
  psiImplPackage="com.github.alonalbert.ijgrammar.simple.impl"

  elementTypeHolderClass="com.github.alonalbert.ijgrammar.simple.SimpleTypes"
  elementTypeClass="com.github.alonalbert.ijgrammar.simple.SimpleElementType"
  tokenTypeClass="com.github.alonalbert.ijgrammar.simple.SimpleTokenType"

  extends(".*Expression")=expression
}

root ::= expression *

// All branches here must end in "Expression"
expression
  ::= orExpression
  |   andExpression
  |   literalExpression
  |   parenExpression

orExpression ::= expression OR expression

andExpression ::= expression AND expression

literalExpression
  ::= KEY COLON VALUE
  |   VALUE

parenExpression ::= LPAREN expression RPAREN
